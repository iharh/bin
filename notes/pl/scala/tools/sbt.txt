Books:
Hinojosa - Testing in Scala

console
	launch a repl

http://www.scala-sbt.org/release/docs/Getting-Started/Basic-Def.html
http://twitter.github.com/scala_school/sbt.html

Common Commands

    tasks         - show all the available tasks
     -v
     help tasks -v
    actions       – show actions available for this project

    reload        - reload modified project description (build.sbt)
    update        – downloads dependencies
    compile       – compiles source
    test          – runs tests
    test:compile
    test-only

    package       – creates a publishable jar file
    package-doc
    package-src

    publish-local – installs the built jar in your local ivy cache
    publish – pushes your jar to a remote repo (if configured)

    clean

    set <var><val>- set a variable ...
    session save  - save session vars

    console
    console-quick - ... without compiling everything before
    console-procect ... for plugin dev
    test:console
    test:console-quick ... with test-dependencies

Evaluation:
    eval
      eval Array(1,2,3).map(n=>println("Number "+n))
    < file_name
      eval commands from the filename
    ;comd1;cmd2
      eval cmd1, and then - cmd2 only if cmd1 is successfull

Moar Commands

    test-failed – run any specs that failed
    test-quick – run any specs that failed and/or had dependencies updated
    clean-*    – see the help...

Note:
    sbt reload update
        Execute multiple commands

History commands:

!         Show history help
!!        Execute the last command again
!:        Show all previous commands
!:n       Show n   n commands
!n        Execute the command with index n, as shown by the !: command
!-n       Execute the nth command before this one
!string   Execute the most recent command starting with 'string'
!?string  Execute the most recent command containing 'string'


Vars:
libraryDependencies (library-dependencies)
  withSources() withJavadocs()
resolvers

Test tags (for test-only after --)
  -n include by the name-of-tag/tags
  -l exclude -//-

unmanagedBase
unmanagedJars (:= file(...))
  sbt show unmanaged-jars

Keys:
http://www.scala-sbt.org/release/docs/Getting-Started/Basic-Def.html#keys
http://www.scala-sbt.org/release/sxr/sbt/Keys.scala.html
http://www.scala-sbt.org/release/docs/Getting-Started/More-About-Settings.html#computing-a-value-based-on-other-keys-values
http://www.scala-sbt.org/release/docs/Getting-Started/Basic-Def.html#keys-in-sbt-interactive-mode

Show/Inspection:

show
    <taskName>
    full-classpath

inspect
  <settingKey>

set
  <setting-expr>

session
  clear|list|remove|save|clear-all|list-all|save-all

clear, list, save - has appropriate [-all] commands at build level also
save-all
  temp settings are appended to the first .sbt file in the project

reload[plugins|return(optional)]


Tasks:

sbt tasks

http://www.scala-sbt.org/release/docs/Detailed-Topics/Tasks

Log Messages:
http://www.scala-sbt.org/release/docs/Howto/logging.html

	last <task>


Multi-Project Build

>projects
  to inspect projects

lazy val ... = [Root]Project()...dependsOn(...)

...dependsOn(projectName % "config1->config2")

.dependOn(square) is the same as .dependsOn(square % "compile->compile")
.dependOn(square % test) is the same as .dependsOn(square % "test->compile")
.dependOn(square % "compile->test;test->test") is the same as .dependsOn(square % "compile;test->test")
.dependOn(square,cube) - multiple dep-sies

...aggregate(square,cube) - groups projects togeather


ProjectRef(file(...), "...")

.sbt file

initialCommands in console := """
    |import scalaz._
    |import Scalaz._
    |""".stripMargin

~/.sbtconfig
SBT_OPTS="-XX:PermSize=256M -XX:MaxPermSize=512M"

~/.sbt/plugins/build.sbt
logLevel := Level.Warn
...

